# Consumption Prediction - Configuration

# Data paths
data:
  raw_path: "data/raw/consumption_dataset.csv"
  processed_path: "data/processed"
  models_path: "data/models"

# Train/test split
split:
  train_ratio: 0.70
  val_ratio: 0.15
  test_ratio: 0.15
  random_state: 42
  time_based: true  # Use time-based split instead of random

# Feature engineering
features:
  temporal:
    - day_of_week
    - is_weekend
    - month
    - day_of_month

  consumption_metrics:
    - waste_rate
    - consumption_rate
    - consumption_per_passenger
    - overage_qty
    - overage_percentage

  aggregations:
    by_product: true
    by_flight_type: true
    by_service_type: true
    by_origin: true

  encoding:
    label_encode:
      - Product_ID
      - Origin
    one_hot_encode:
      - Flight_Type
      - Service_Type

# Business rules
business_rules:
  min_buffer_percentage: 1.05  # 5% safety buffer
  min_qty_per_passenger_ratio: 0.10  # At least 10% of passengers
  max_qty_per_passenger_ratio: 1.50  # Max 150% of passengers
  min_absolute_qty: 10  # Minimum quantity regardless

# Packaging units (items per package)
packaging_units:
  BRD001: 6   # Bread Roll Pack
  CRK075: 12  # Butter Cookies
  DRK023: 6   # Sparkling Water
  DRK024: 6   # Still Water
  CHO050: 12  # Chocolate Bar
  default: 1

# Model configuration
models:
  xgboost:
    enabled: true
    params:
      n_estimators: 500
      max_depth: 6
      learning_rate: 0.05
      subsample: 0.8
      colsample_bytree: 0.8
      gamma: 1
      reg_alpha: 0.1
      reg_lambda: 1
      random_state: 42
      n_jobs: -1
      early_stopping_rounds: 50

  random_forest:
    enabled: true
    params:
      n_estimators: 300
      max_depth: 15
      min_samples_split: 5
      min_samples_leaf: 2
      max_features: 'sqrt'
      random_state: 42
      n_jobs: -1

  ensemble:
    enabled: true
    weights:
      xgboost: 0.7
      random_forest: 0.3

# Evaluation metrics
evaluation:
  metrics:
    - MAE
    - RMSE
    - MAPE
    - R2
  business_metrics:
    - waste_reduction
    - cost_savings
    - shortage_risk

# API configuration
api:
  host: "0.0.0.0"
  port: 8000
  reload: true
  log_level: "info"
  cors_origins:
    - "http://localhost:3000"
    - "http://localhost:8080"

# Logging
logging:
  level: "INFO"
  format: "%(asctime)s - %(name)s - %(levelname)s - %(message)s"
  file: "logs/consumption_prediction.log"
